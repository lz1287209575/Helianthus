###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

module(
    name = "helianthus",
    version = "1.0.0",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")

# C++ rules
bazel_dep(name = "rules_cc", version = "0.1.1")

# Python rules (required by some dependencies)
bazel_dep(name = "rules_python", version = "0.40.0")

# Google Test
bazel_dep(name = "googletest", version = "1.15.2")

# nlohmann/json for RPC serialization
bazel_dep(name = "nlohmann_json", version = "3.11.2")

# Foreign CC (build C/C++ libraries via CMake/Autotools/Make)
bazel_dep(name = "rules_foreign_cc", version = "0.10.1")

# Provide legacy repo names that some third-party expect
bazel_dep(name = "abseil-cpp", version = "20240722.0", repo_name = "com_google_absl")

# Introduce tcmalloc as a module and override to upstream repo
bazel_dep(name = "tcmalloc")
archive_override(
    module_name = "tcmalloc",
    urls = [
        "https://github.com/google/tcmalloc/archive/refs/heads/master.tar.gz",
    ],
    strip_prefix = "tcmalloc-master",
)

# zlib from BCR (official)
bazel_dep(name = "zlib", version = "1.3.1")

# spdlog from BCR
bazel_dep(name = "spdlog", version = "1.12.0")

# Import repo rules for use in MODULE.bazel
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
new_local_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:local.bzl", "new_local_repository")

# -------- Non-BCR, pinned via http_archive (with BUILD adapters) --------
# hiredis (BCR 暂无) – use http_archive and local BUILD adapter
http_archive(
    name = "hiredis",
    strip_prefix = "hiredis-1.1.0",
    urls = [
        "https://github.com/redis/hiredis/archive/v1.1.0.tar.gz",
    ],
    build_file = "//ThirdParty:hiredis.BUILD",
)

# Mongo C Driver
http_archive(
    name = "mongo_c_driver_src",
    strip_prefix = "mongo-c-driver-1.24.4",
    urls = [
        "https://github.com/mongodb/mongo-c-driver/archive/refs/tags/1.24.4.tar.gz",
    ],
    build_file = "//ThirdParty:mongo_c_driver.BUILD",
)

# Mongo C++ Driver
http_archive(
    name = "mongo_cxx_driver_src",
    strip_prefix = "mongo-cxx-driver-r3.8.0",
    urls = [
        "https://github.com/mongodb/mongo-cxx-driver/archive/refs/tags/r3.8.0.tar.gz",
    ],
    build_file = "//ThirdParty:mongo_cxx_driver.BUILD",
)

# Legacy gperftools kept (not used when module tcmalloc works)
http_archive(
    name = "gperftools",
    strip_prefix = "gperftools-gperftools-2.10",
    urls = [
        "https://github.com/gperftools/gperftools/archive/gperftools-2.10.tar.gz",
    ],
    build_file = "//ThirdParty:gperftools.BUILD",
)

# Fallback legacy repos expected by tcmalloc when not provided via modules
http_archive(
    name = "com_google_protobuf",
    strip_prefix = "protobuf-25.1",
    urls = [
        "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.1.tar.gz",
    ],
)

########################################
# Local/prebuilt (to be migrated later) #
########################################
# mysql_prebuilt – keep for now (后续迁移至 http_archive + rules_foreign_cc)
new_local_repository(
    name = "mysql_prebuilt",
    path = "ThirdParty/mariadb_prebuilt",
    build_file = "//ThirdParty:mariadb_prebuilt.BUILD",
)

# Removed: mongo_prebuilt (已迁移为 http_archive mongo_cxx_driver_src)
