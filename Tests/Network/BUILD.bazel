cc_test(
    name = "asio_test",
    srcs = ["AsioTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "tcp_echo_async_test",
    srcs = ["TcpEchoTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "//Shared/Common:common",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "tcp_async_echo_test",
    srcs = ["TcpAsyncEchoTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "udp_async_echo_test",
    srcs = ["UdpAsyncEchoTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "cancel_timeout_test",
    srcs = ["CancelTimeoutTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "performance_metrics_test",
    srcs = ["PerformanceMetricsTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "message_protocol_test",
    srcs = ["MessageProtocolTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "error_mapping_test",
    srcs = ["ErrorMappingTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "buffer_pool_test",
    srcs = ["BufferPoolTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "zero_copy_buffer_test",
    srcs = ["ZeroCopyBufferTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "batch_processing_test",
    srcs = ["BatchProcessingTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "wakeup_mechanism_test",
    srcs = ["WakeupMechanismTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "simple_tcp_test",
    srcs = ["SimpleTcpTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "reactor_test",
    srcs = ["ReactorTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "length_prefix_echo_test",
    srcs = ["LengthPrefixEchoTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": [],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "iocp_wakeup_test",
    srcs = ["IocpWakeupTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "acceptex_test",
    srcs = ["AcceptExTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "acceptex_concurrent_test",
    srcs = ["AcceptExConcurrentTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "async_read_write_test",
    srcs = ["AsyncReadWriteTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "iocp_resume_test",
    srcs = ["IocpResumeTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "async_connect_test",
    srcs = ["AsyncConnectTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "iocontext_stop_test",
    srcs = ["IoContextStopTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "acceptex_concurrency_test",
    srcs = ["AcceptExConcurrencyTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "zerocopy_optimization_test",
    srcs = ["ZeroCopyOptimizationTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "@googletest//:gtest_main",
    ],
    visibility = ["//visibility:public"],
)