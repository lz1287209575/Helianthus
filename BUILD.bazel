# Root BUILD file for Helianthus Game Server

package(default_visibility = ["//visibility:public"])

# Global configuration
config_setting(
    name = "enable_lua_scripting",
    define_values = {"ENABLE_LUA_SCRIPTING": "1"},
)

config_setting(
    name = "enable_python_scripting", 
    define_values = {"ENABLE_PYTHON_SCRIPTING": "1"},
)

config_setting(
    name = "enable_js_scripting",
    define_values = {"ENABLE_JS_SCRIPTING": "1"},
)

config_setting(
    name = "enable_dotnet_scripting",
    define_values = {"ENABLE_DOTNET_SCRIPTING": "1"},
)

# Enable TCMalloc via --define USE_TCMALLOC=1
config_setting(
    name = "use_tcmalloc",
    define_values = {"USE_TCMALLOC": "1"},
)

# Thin wrapper for allocator, to propagate as a dependency
cc_library(
    name = "allocator_impl",
    deps = select({
        ":use_tcmalloc": ["@tcmalloc//tcmalloc:tcmalloc"],
        "//conditions:default": [],
    }),
)

# Global C++ flags
cc_library(
    name = "helianthus_config",
    hdrs = ["HelianthusConfig.h"],
    defines = select({
        ":enable_lua_scripting": ["HELIANTHUS_ENABLE_LUA=1"],
        "//conditions:default": ["HELIANTHUS_ENABLE_LUA=0"],
    }) + select({
        ":enable_python_scripting": ["HELIANTHUS_ENABLE_PYTHON=1"], 
        "//conditions:default": ["HELIANTHUS_ENABLE_PYTHON=0"],
    }) + select({
        ":enable_js_scripting": ["HELIANTHUS_ENABLE_JS=1"],
        "//conditions:default": ["HELIANTHUS_ENABLE_JS=0"],
    }) + select({
        ":enable_dotnet_scripting": ["HELIANTHUS_ENABLE_DOTNET=1"],
        "//conditions:default": ["HELIANTHUS_ENABLE_DOTNET=0"],
    }) + select({
        ":use_tcmalloc": ["HELIANTHUS_USE_TCMALLOC"],
        "//conditions:default": [],
    }),
    copts = select({
        "@bazel_tools//tools/cpp:msvc": [
            "/std:c++17",
            "/W4",
            "/O2",
        ],
        "//conditions:default": [
            "-std=c++17",
            "-Wall",
            "-Wextra",
            "-O2",
        ],
    }),
    deps = [":allocator_impl"],
)
