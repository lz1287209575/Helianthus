load("@rules_cc//cc:defs.bzl", "cc_library")

# Database interface definitions
cc_library(
    name = "database_types",
    hdrs = ["DatabaseTypes.h"],
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "database_interfaces",
    hdrs = [
        "IDatabase.h",
        "IConnectionPool.h",
    ],
    deps = [
        ":database_types",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# ORM library
cc_library(
    name = "orm",
    hdrs = ["ORM.h"],
    deps = [
        ":database_types",
        ":database_interfaces",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# MySQL implementation (temporarily disabled)
# cc_library(
#     name = "mysql_connection",
#     srcs = ["MySQL/MySqlConnection.cpp"],
#     hdrs = ["MySQL/MySqlConnection.h"],
#     deps = [
#         ":database_interfaces",
#         ":database_types",
#         "//Shared/Common:common",
#         "@mysql_connector_cpp//:mysql_client",
#     ],
#     visibility = ["//visibility:public"],
# )

# cc_library(
#     name = "mysql_database",
#     hdrs = ["MySQL/MySqlDatabase.h"],
#     deps = [
#         ":mysql_connection",
#         ":database_interfaces",
#         ":database_types",
#         "//Shared/Common:common",
#     ],
#     visibility = ["//visibility:public"],
# )

# Redis implementation
cc_library(
    name = "redis_connection",
    srcs = ["Redis/RedisConnection.cpp"],
    hdrs = ["Redis/RedisConnection.h"],
    deps = [
        ":database_interfaces",
        ":database_types",
        "//Shared/Common:common",
        "@hiredis//:hiredis",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "redis_database",
    hdrs = ["Redis/RedisDatabase.h"],
    deps = [
        ":redis_connection",
        ":database_interfaces",
        ":database_types",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# MongoDB implementation (temporarily disabled)
# cc_library(
#     name = "mongo_connection",
#     srcs = ["MongoDB/MongoConnection.cpp"],
#     hdrs = ["MongoDB/MongoConnection.h"], 
#     deps = [
#         ":database_interfaces",
#         ":database_types",
#         "//Shared/Common:common",
#         "@mongo_cxx_driver//:mongocxx",
#         "@mongo_cxx_driver//:bsoncxx",
#     ],
#     visibility = ["//visibility:public"],
# )

# cc_library(
#     name = "mongo_database",
#     hdrs = ["MongoDB/MongoDatabase.h"],
#     deps = [
#         ":mongo_connection",
#         ":database_interfaces",
#         ":database_types",
#         "//Shared/Common:common",
#     ],
#     visibility = ["//visibility:public"],
# )

# Connection pool implementation
cc_library(
    name = "connection_pool",
    hdrs = ["ConnectionPool.h"],
    deps = [
        ":database_interfaces",
        ":database_types",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# Database configuration
cc_library(
    name = "database_config",
    hdrs = ["DatabaseConfig.h"],
    deps = [
        ":database_types",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# Database factory
cc_library(
    name = "database_factory",
    hdrs = ["DatabaseFactory.h"],
    deps = [
        # ":mysql_database",
        ":redis_database",
        # ":mongo_database",
        ":database_interfaces",
        ":database_config",
    ],
    visibility = ["//visibility:public"],
)

# All database components
cc_library(
    name = "database",
    deps = [
        ":database_types",
        ":database_interfaces", 
        ":orm",
        # ":mysql_database",
        ":redis_database",
        # ":mongo_database",
        ":connection_pool",
        ":database_config",
        ":database_factory",
    ],
    visibility = ["//visibility:public"],
)