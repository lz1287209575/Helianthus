cc_binary(
    name = "performance_benchmark",
    srcs = ["PerformanceBenchmarkExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Monitoring:enhanced_prometheus_exporter",
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "prometheus_dump",
    srcs = ["PrometheusDump.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "prometheus_exporter_example",
    srcs = ["PrometheusExporterExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Monitoring:monitoring",
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "tcmalloc_config_example",
    srcs = ["TCMallocConfigExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "batch_processing_example",
    srcs = ["BatchProcessingExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "wakeup_mechanism_example",
    srcs = ["WakeupMechanismExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "lua_hotreload_example",
    srcs = ["LuaHotReloadExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Scripting:scripting",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "game_server_with_hotreload",
    srcs = ["GameServerWithHotReload.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Scripting:scripting",
        "//Shared/Network:network",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "performance_monitoring_example",
    srcs = ["PerformanceMonitoringExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Common:common",
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "log_category_example",
    srcs = ["LogCategoryExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "unified_api_example",
    srcs = ["UnifiedApiExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Network:network",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "persistence_metrics_example",
    srcs = ["PersistenceMetricsExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "resource_monitor_example",
    srcs = ["ResourceMonitorExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "transaction_example",
    srcs = ["TransactionExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "health_check_example",
    srcs = ["HealthCheckExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "config_system_example",
    srcs = ["ConfigSystemExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Config:config",
        "//Shared/Common:common",
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "rpc_example",
    srcs = ["RpcExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/RPC:rpc",
        "//Shared/Common:common",
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "discovery_example",
    srcs = ["DiscoveryExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Discovery:discovery",
        "//Shared/Common:common",
        "//Shared/Network:network",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "message_queue_example",
    srcs = ["MessageQueueExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "message_queue_persistence_example",
    srcs = ["MessageQueuePersistenceExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_persistence_example",
    srcs = ["SimplePersistenceExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "logging_test_example",
    srcs = ["LoggingTestExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)



cc_binary(
    name = "multi_language_scripting_example",
    srcs = ["MultiLanguageScriptingExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Scripting:scripting",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)







cc_binary(
    name = "dead_letter_queue_example",
    srcs = ["DeadLetterQueueExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_dead_letter_example",
    srcs = ["SimpleDeadLetterExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "dead_letter_core_test",
    srcs = ["DeadLetterCoreTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "persistence_test",
    srcs = ["PersistenceTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "file_persistence_test",
    srcs = ["FilePersistenceTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "filesystem_test",
    srcs = ["FileSystemTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "index_read_test",
    srcs = ["IndexReadTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_log_test",
    srcs = ["SimpleLogTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "precise_debug_test",
    srcs = ["PreciseDebugTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "thread_join_test",
    srcs = ["ThreadJoinTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "destructor_test",
    srcs = ["DestructorTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "initialize_step_test",
    srcs = ["InitializeStepTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "mutex_destructor_test",
    srcs = ["MutexDestructorTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "filestream_test",
    srcs = ["FileStreamTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "readindex_test",
    srcs = ["ReadIndexTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_destructor_test",
    srcs = ["SimpleDestructorTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "logger_shutdown_test",
    srcs = ["LoggerShutdownTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_send_test",
    srcs = ["SimpleSendTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_receive_test",
    srcs = ["SimpleReceiveTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "dlq_monitor_test",
    srcs = ["DLQMonitorTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "ha_failover_demo",
    srcs = ["HAFailoverDemo.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "simple_ha_test",
    srcs = ["SimpleHATest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "transaction_test",
    srcs = ["TransactionTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "compression_encryption_test",
    srcs = ["CompressionEncryptionTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "alert_test",
    srcs = ["AlertTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "performance_test",
    srcs = ["PerformanceTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "performance_optimizer_example",
    srcs = ["PerformanceOptimizerExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8", "/DHELIANTHUS_ENABLE_LOGGING=1"],
        "//conditions:default": ["-std=c++20", "-DHELIANTHUS_ENABLE_LOGGING=1"],
    }),
    deps = [
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

# Temporarily disabled due to macro issues
# cc_binary(
#     name = "advanced_reflection_example",
#     srcs = ["AdvancedReflectionExample.cpp"],
#     copts = select({
#         "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
#         "//conditions:default": ["-std=c++20"],
#     }),
#     deps = [
#         "//Shared/Reflection:helianthus_reflection",
#         "//Shared/Common:common",
#     ],
#     visibility = ["//visibility:public"],
# )











cc_binary(
    name = "enhanced_prometheus_example",
    srcs = ["EnhancedPrometheusExample.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Monitoring:enhanced_prometheus_exporter",
        "//Shared/MessageQueue:message_queue",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "helianthus_reflection_test",
    srcs = ["HelianthusReflectionTest.cpp"],
    copts = select({
        "@bazel_tools//src/conditions:windows": ["/std:c++20", "/utf-8"],
        "//conditions:default": ["-std=c++20"],
    }),
    deps = [
        "//Shared/Reflection:helianthus_reflection",
        "//Shared/Common:common",
    ],
    visibility = ["//visibility:public"],
)



