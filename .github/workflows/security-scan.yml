name: Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Bazel
      uses: bazelbuild/setup-bazelisk@v2
      with:
        bazel-version: 8.3.1
    
    - name: Cache Bazel
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/bazel
          ~/.cache/bazelisk
        key: ${{ runner.os }}-bazel-${{ hashFiles('**/MODULE.bazel', '**/MODULE.bazel.lock') }}
        restore-keys: |
          ${{ runner.os }}-bazel-
    
    - name: Build project
      run: |
        bazel build //...
    
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      id: dependency-check
      with:
        project: 'Helianthus'
        path: '.'
        format: 'HTML'
        args: >
          --suppression suppression.xml
          --enableRetired
          --enableExperimental
          --failOnCVSS 7
          --nvdApiKey ${{ secrets.NVD_API_KEY }}
      continue-on-error: true
    
    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/
    
    - name: Comment PR with security scan results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if dependency check passed
          const dependencyCheckExitCode = '${{ steps.dependency-check.outcome }}';
          
          let comment = '## üîí Security Scan Results\n\n';
          
          if (dependencyCheckExitCode === 'success') {
            comment += '‚úÖ **OWASP Dependency Check**: Passed\n';
          } else {
            comment += '‚ùå **OWASP Dependency Check**: Failed\n';
            comment += '\nPlease review the security vulnerabilities found in the dependency check report.\n';
          }
          
          comment += '\nüìä **Report**: Check the artifacts for detailed security scan reports.\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });